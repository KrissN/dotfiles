#!/bin/bash

BATCH=
ALLHOSTS=
VERBOSE=1

function log() {
    msg=$1
    lvl=$2
    if [[ $lvl -le $VERBOSE ]]; then
        echo $msg >&2
    fi
}

while getopts "abhqv" opt; do
    case $opt in
        a)
            log "setting allhosts" 0
            ALLHOSTS="allhosts"
            ;;
        b)
            log "setting batch" 0
            BATCH="batch"
            ;;
        q)
            VERBOSE=$(($VERBOSE - 1))
            ;;
        v)
            VERBOSE=$(($VERBOSE + 1))
            ;;
        h)
            echo "Usage: $(basename $0) [-b] [-q] [-v] [-a|<hostname>...]"
            echo "Options:"
            echo "    -a: Sync to all hosts in .ssh/known_hosts"
            echo "    -b: Non-interactive (batch) mode"
            echo "    -q: Be quiet"
            echo "    -v: Be verbose"
            exit 1
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
    esac
done

DESTS=""
HOSTDESTS=""
EXCLUDES=".emacs.d/backups .emacs.d/auto-save-list"

pushd $HOME > /dev/null

# build a list of dotfiles to copy from git.  we explicitly include
# .zsh.d and .emacs.d because git doesn't list directories and we want
# to make sure to copy everything in those directories, including
# stuff that's not committed to git
DOTFILES=".zsh.d .emacs.d bin sw $(git ls-files | grep -v 'README\|\.zsh\.d/\|\.emacs\.d/')"

. .syncdot

if [[ -n "$ALLHOSTS" ]]; then
    HOSTDESTS="$(sed 's/[,[:space:]].*//' $HOME/.ssh/known_hosts)"
elif [[ -n "${@:$OPTIND}" ]]; then
    HOSTDESTS="${@:$OPTIND}"
fi

rsync_opts="-a"
if [[ -n "$BATCH" ]]; then
    rsync_opts="$rsync_opts -e 'ssh -o PasswordAuthentication=no'"
fi
if [[ $VERBOSE -gt 1 ]]; then
    rsync_opts="$rsync_opts -v"
fi
if [[ $VERBOSE -lt 1 ]]; then
    rsync_opts="$rsync_opts -q"
fi
for ex in $EXCLUDES; do
    rsync_opts="$rsync_opts --exclude=$ex"
done
log "rsync options: $rsync_opts" 2

for dest in $DESTS; do
    log "Copying to $dest" 1
    rsync $rsync_opts $DOTFILES $dest
done

for host in $HOSTDESTS; do
    log "Copying to $host" 1
    log "rsync $rsync_opts $DOTFILES $host:."
    rsync $rsync_opts $DOTFILES $host:.
done

popd > /dev/null
